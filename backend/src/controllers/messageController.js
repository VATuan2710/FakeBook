import mongoose from "mongoose";
import Message from "../models/Message.js";

// üìå **L·∫•y l·ªãch s·ª≠ tin nh·∫Øn gi·ªØa 2 ng∆∞·ªùi**
export const getMessages = async (req, res) => {
  try {
    const { userId, friendId } = req.params;

    // Ki·ªÉm tra xem userId & friendId c√≥ h·ª£p l·ªá kh√¥ng
    if (!userId || !friendId) {
      return res
        .status(400)
        .json({ message: "Thi·∫øu th√¥ng tin ng∆∞·ªùi g·ª≠i ho·∫∑c nh·∫≠n" });
    }

    if (
      !mongoose.Types.ObjectId.isValid(userId) ||
      !mongoose.Types.ObjectId.isValid(friendId)
    ) {
      return res.status(400).json({ message: "ID ng∆∞·ªùi d√πng kh√¥ng h·ª£p l·ªá!" });
    }

    // Truy v·∫•n tin nh·∫Øn gi·ªØa 2 ng∆∞·ªùi t·ª´ MongoDB
    const messages = await Message.find({
      $or: [
        { sender: userId, receiver: friendId },
        { sender: friendId, receiver: userId }
      ],
    })
    .populate('sender', 'username displayName avatarUrl')
    .populate('receiver', 'username displayName avatarUrl')
    .sort({ createdAt: 1 });

    res.status(200).json(messages);
  } catch (error) {
    console.error("L·ªói khi l·∫•y tin nh·∫Øn:", error);
    res.status(500).json({ message: "L·ªói server!" });
  }
};
export const sendMessage = async (req, res) => {
  try {
    const { sender, receiver, message } = req.body;

    // Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o
    if (!sender || !receiver || !message) {
      return res.status(400).json({ message: "Thi·∫øu d·ªØ li·ªáu c·∫ßn thi·∫øt!" });
    }

    if (
      !mongoose.Types.ObjectId.isValid(sender) ||
      !mongoose.Types.ObjectId.isValid(receiver)
    ) {
      return res.status(400).json({ message: "ID ng∆∞·ªùi d√πng kh√¥ng h·ª£p l·ªá!" });
    }

    // L∆∞u tin nh·∫Øn v√†o MongoDB
    const newMessage = new Message({
      sender: new mongoose.Types.ObjectId(sender),
      receiver: new mongoose.Types.ObjectId(receiver),
      message,
    });

    await newMessage.save();

    res
      .status(201)
      .json({ message: "Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i!", data: newMessage });
  } catch (error) {
    console.error("‚ùå L·ªói khi g·ª≠i tin nh·∫Øn:", error);
    res.status(500).json({ message: "L·ªói server!" });
  }
};
