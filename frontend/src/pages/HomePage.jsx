import React, { useEffect, useState } from "react";
import "../assets/css/HomePage.css";
import Header from "../layouts/header/Header";
import Sidebar from "../layouts/sidebar/Sidebar";
import Posts from "../layouts/posts/Posts";
import Widgets from "../layouts/widgets/Widgets";
import Stories from "../components/Stories";
import PeopleYouMayKnow from "../components/PeopleYouMayKnow";
import PostFormPage from "./PostFormPage";
import PostListPage from "./PostListPage";
import { getPosts } from "../service/postService";

const HomePage = () => {
  const [posts, setPosts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      try {
        setLoading(true);
        setError(null);
        
        console.log("üîÑ ƒêang t·∫£i danh s√°ch b√†i vi·∫øt...");
        const postsData = await getPosts();
        
        console.log("‚úÖ T·∫£i b√†i vi·∫øt th√†nh c√¥ng:", postsData);
        setPosts(postsData.posts || []);
      } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y danh s√°ch b√†i vi·∫øt:", error);
        
        // X·ª≠ l√Ω c√°c lo·∫°i l·ªói kh√°c nhau
        if (error.response?.status === 401) {
          setError("Phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n. ƒêang chuy·ªÉn h∆∞·ªõng...");
        } else if (error.response?.status === 403) {
          setError("B·∫°n kh√¥ng c√≥ quy·ªÅn xem c√°c b√†i vi·∫øt n√†y.");
        } else if (error.response?.status >= 500) {
          setError("L·ªói server. Vui l√≤ng th·ª≠ l·∫°i sau.");
        } else if (!navigator.onLine) {
          setError("Kh√¥ng c√≥ k·∫øt n·ªëi internet. Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi c·ªßa b·∫°n.");
        } else {
          setError("Kh√¥ng th·ªÉ t·∫£i b√†i vi·∫øt. Vui l√≤ng th·ª≠ l·∫°i.");
        }
        
        setPosts([]);
      } finally {
        setLoading(false);
      }
    };

    // Ki·ªÉm tra xem user c√≥ ƒëƒÉng nh·∫≠p kh√¥ng
    const token = localStorage.getItem("token");
    if (!token) {
      console.warn("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y token, chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang login");
      window.location.href = "/login";
      return;
    }

    fetchPosts();
  }, []);

  // H√†m callback ƒë·ªÉ c·∫≠p nh·∫≠t danh s√°ch b√†i vi·∫øt
  const handlePostCreated = (newPost) => {
    setPosts((prevPosts) => {
      if (!Array.isArray(prevPosts)) {
        console.error("prevPosts kh√¥ng ph·∫£i l√† m·∫£ng:", prevPosts);
        return [newPost]; 
      }
      return [newPost, ...prevPosts]; // Th√™m b√†i vi·∫øt m·ªõi v√†o ƒë·∫ßu danh s√°ch
    });
  };

  // H√†m retry ƒë·ªÉ th·ª≠ l·∫°i vi·ªác t·∫£i b√†i vi·∫øt
  const handleRetry = () => {
    const fetchPosts = async () => {
      try {
        setLoading(true);
        setError(null);
        
        const postsData = await getPosts();
        setPosts(postsData.posts || []);
      } catch (error) {
        console.error("‚ùå L·ªói khi retry t·∫£i b√†i vi·∫øt:", error);
        setError("V·∫´n kh√¥ng th·ªÉ t·∫£i b√†i vi·∫øt. Vui l√≤ng th·ª≠ l·∫°i sau.");
      } finally {
        setLoading(false);
      }
    };

    fetchPosts();
  };

  return (
    <div>
      <Header />
      <div className="homePage">
        <Sidebar />
        <div className="mainContent">
          <Stories />
          <PostFormPage onPostCreated={handlePostCreated} />
          
          {/* People You May Know Section */}
          <div className="pymk-section">
            <PeopleYouMayKnow 
              maxUsers={6}
              showSearch={true}
              title="Nh·ªØng ng∆∞·ªùi b·∫°n c√≥ th·ªÉ bi·∫øt"
            />
          </div>
          
          {/* Hi·ªÉn th·ªã loading state */}
          {loading && (
            <div style={{ 
              textAlign: 'center', 
              padding: '20px',
              backgroundColor: '#f0f2f5',
              borderRadius: '8px',
              margin: '10px 0'
            }}>
              <div>üîÑ ƒêang t·∫£i b√†i vi·∫øt...</div>
            </div>
          )}
          
          {/* Hi·ªÉn th·ªã error state */}
          {error && !loading && (
            <div style={{ 
              textAlign: 'center', 
              padding: '20px',
              backgroundColor: '#ffebee',
              borderRadius: '8px',
              margin: '10px 0',
              border: '1px solid #f44336',
              color: '#d32f2f'
            }}>
              <div>‚ùå {error}</div>
              <button 
                onClick={handleRetry}
                style={{
                  marginTop: '10px',
                  padding: '8px 16px',
                  backgroundColor: '#1877f2',
                  color: 'white',
                  border: 'none',
                  borderRadius: '6px',
                  cursor: 'pointer'
                }}
              >
                üîÑ Th·ª≠ l·∫°i
              </button>
            </div>
          )}
          
          {/* Hi·ªÉn th·ªã danh s√°ch b√†i vi·∫øt */}
          {!loading && !error && (
            <PostListPage posts={posts} />
          )}
        </div>
        <Widgets />
      </div>
    </div>
  );
};

export default HomePage;
